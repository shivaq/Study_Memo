---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Lambda to play around'
#################################################
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Lambda Schedule
        Parameters:
          - LambdaExecutionSchedule
          - DoesExecuteLambda
          - LambdaFileName
      -
        Label:
          default: "Pass to Lambda Code"
        Parameters:
          - SomeNumbers
    ParameterLabels:
      DoesExecuteLambda:
        default: Do or not do...
#################################################
Parameters:
  SomeNumbers:
    Description: Set how many days the AMI retains.
    Type: String
    Default: 3
  LambdaExecutionSchedule:
    Description: Set how many days the AMI retains.
    Type: String
    Default: cron(0 3 * * ? *)
  DoesExecuteLambda:
    Description: Run or not run lambda function.
    Type: String
    Default: DISABLED
    AllowedValues:
      - ENABLED
      - DISABLED
  LambdaFileName:
    Description: Lambda file name which stored in S3
    Type: String
    Default: tesLambda
################ Lambda::Function ######################
################ Lambda::Function ######################
################ Lambda::Function ######################
Resources:
  SnapshotCreationFunction:
    Type: AWS::Lambda::Function
    Properties:
      # 物理ID
      FunctionName: LambdaTestShibata
      Description: "A Lambda function that creates snapshots of EBS volumes"
      Handler: index.lambda_handler # TODO Handler がどうだといいのかを確認
      Runtime: python3.6
      Timeout: 300
      Role: !GetAtt RoleToManipulateEc2.Arn
      Environment:
      Code:
        S3Bucket: !ImportValue S3-TestBucket
        S3Key: !join
            - ''
            - - !Ref LambdaFileName
              - '.zip'









############## Schedule to run lambda ##############
  EventScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      # 物理ID 扱い
      Name: AMI_backup_event
      Description: Run the daily AMI backup
      ScheduleExpression: !Ref LambdaExecutionSchedule
      State: !Ref DoesExecuteLambda
      Targets:
        - Arn: !GetAtt SnapshotCreationFunction.Arn
          Id: SnapshotCreationFunction
############## Grant pemission to run Lambda ##############
  PermissionForEventsToInvokeCreationLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SnapshotCreationFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      # 関数を呼び出しているリソースの ARN
      SourceArn: !GetAtt EventScheduleRule.Arn
      # ソース所有者の AWS アカウント ID
      SourceAccount: !Ref AWS::AccountId
############## Role ##############
  RoleToManipulateEc2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: SnapshotIAMRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2:Describe*
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2:CreateImage
              - ec2:CreateTags
              - ec2:DeregisterImage
              - ec2:DeleteSnapshot
              Resource: "*"
      Path: "/"
