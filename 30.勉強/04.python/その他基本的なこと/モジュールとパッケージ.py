■■■■■■■■■■■■■■■■■■■■■■■■■■ モジュールとは
.py拡張子のPythonファイル

▼ モジュールがPythonスクリプトにロードされる時の挙動
1.モジュール内のコードを実行して初期化される。※初期化は一度切り。
※ コード内のほかのモジュールが、同じモジュールを再びimportした場合再度ロードされることはない。
※ モジュール内のローカル変数も、初期化は一度切り。シングルトンのように振る舞う。


▼ モジュールを書く,
モジュール名.pyを作る→importモジュール名でインポートする。,

▼ モジュールインポート方法1,
import foo.bar
#barにアクセスするたびに、foo.をプリフィックスせんといかん。,

▼ モジュールインポート方法2,
from foo import bar
#モジュールが、現在のモジュールの名前空間にインポートされるので、上記例のようなプリフィックスは不要

■■■■■■■■■■■■■■■■■■■■■■■■■■ パッケージとは,
・パッケージは、複数のパッケージやモジュールを内包する名前空間。
・ただのディレクトリではあるが、__init__.pyファイルを含む必要がある。,

▼ __init__.py は何者か
・空のファイルでもいい。,
・__init__.pyファイルを使うと、どのモジュールをAPIとしてエクスポートするか、絞ることも可能。
※ __all__を上書きすることで可能になる。


■■■■■■■■■■■■■■■■■■■■■■■■■■ Python に main() は存在しない
Pythonには、main()のように、自動的に走るメソッドは用意されていない。
暗黙的に、インデントがトップレベルの関数のみが走る,

▼ モジュールが直接実行されたか、import されているかを判断する書き方

# モジュールが直接実行された場合
if__name__==__main__:
#  以下のメソッド等を実行する、みたく描いたりする

・解説
モジュールが直接実行された場合
 →__name__に__main__がセットされる。
# ※ __name__はビルトイン変数。現在のモジュール名を評価する。
 →直接実行された場合のみ、if 文が true になる
