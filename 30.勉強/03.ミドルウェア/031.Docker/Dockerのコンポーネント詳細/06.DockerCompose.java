■■■■■■■■■■■■■■■■■■■■■■■■■■ Docker Compose
マルチコンテナなアプリを定義し、走らせるためのツール
アプリのサービスを定義するのに yaml が使えるようになる。

▼ 単一のホストに複数の隔離環境
Compose はプロジェクト名を使って、互いの環境を隔離する。
・dev ホスト上で、単一環境の複数のコピーを作成できる。プロジェクトの各フィーチャーブランチの、安定したコピーを走らせるとか。
・CI サーバーで、ビルドが互いに干渉しあわないよう、プロジェクト名をユニークなビルド番号にセット
・共有ホストや dev ホストで、異なるプロジェクトが干渉し合うことを回避するのに使う

▼ コンテナ作成時にボリュームを確保
コンテナを走らせた時に、前回走らせたときのコンテナを発見したら、古いコンテナから新しいコンテナにボリュームをコピーし、データが消えるのを回避する

▼ 変更があったコンテナだけ再生成する
Compose はコンテナ作成に使ったコンフィグをキャッシュする。
変更のないサービスを再起動したとき、Compose は既存のコンテナを再利用する。
結果、環境への変更がすばやく行える様になる。

▼ 環境間の変数
Compose ファイル内の変数をサポート。
変数によって、異なる環境の構成をカスタマイズできる。

▼ ユースケース
・開発環境
Compose ファイルを利用することで、アプリのサービスのすべての依存関係を設定、ドキュメントすることができる。 ※ DB、キュー、キャッシュ、API など。

・自動テスト環境
Compose を使うと簡単に隔離テスト環境を作成、削除できる。

・シングルホストデプロイ
Compose は開発とテストワークフローに焦点をあててきた。
