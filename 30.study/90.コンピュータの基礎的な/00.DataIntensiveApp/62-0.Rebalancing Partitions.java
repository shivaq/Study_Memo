■■■■■■■■■■■■■■■■■■■■■■■■■■ Rebalancing Partitions
▼ DBそのものに歴史あり
・クエリスループットが増える
 →負荷をやりくりするためにCPUを増やしたくなる

・データセットのサイズが増える
 →それを格納するためのディスクとRAMPANT を増やしたくなる

・マシーンが失敗する。
 →他のマシーンが、failしたマシンの役割を引き継ぐ必要が出てくる

▼ それを、リバランシングと呼ぶ
上kい変更は全て、データとリクエストをあるノードから別のノードに移動する必要がある。
クラスタ内の一つのノードから、 load を別のノードに移動するプロセスを、リバランシングと呼ぶ

▼ リバランシングの minimum requirements // パーティショニングスキーマの違いにかかわらず
・リバランシング後は、load (data storage, read and write requests) はクラスタ内のノードに均等にシェアされるべき
・リバランシング実行中も、DBは読み書きが継続できなければならない
・リバランシングをすばやくやるために、ネットワークとDiskのIOを最小限にするために、必要以上のデータをノード間で移動させないこと
