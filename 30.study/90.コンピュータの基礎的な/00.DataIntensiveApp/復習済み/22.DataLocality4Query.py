■■■■■■■■■■■■■■■■■■■■■■■■■■ Data Locality？？
RDBのように、複数のテーブルに分散されておらず、一つのドキュメントに関連するデータが集まっている状態、かな？

■■■■■■■■■■■■■■■■■■■■■■■■■■ Data locality for queries
・ドキュメントは通常一つのストリングとして格納されている。JSONやバイナリの変形的なものとか。

▼ ストレージローカリティにアドバンテージが有るケース
・上記、ストレージローカリティは、アプリがドキュメント全体にアクセスする場合などに、パフォーマンス上のアドバンテージが有る。
※ webページで render する場合とか。
・データが複数のテーブルにまたがっていると、ほしいデータを取得するためのディスク検索により時間がかかる。

▼ ストレージローカリティが向いていないケース
・ドキュメントの一部にだけアクセスしたいときでも、ドキュメント全体をロードする必要がある。
・ドキュメント更新時には、ドキュメント全体を rewritten する必要がある。

▼ ドキュメントは小さく管理せよ
ドキュメントは小さくしておくことが推奨されているし、ドキュメントのサイズが大きくなるような書き込みは回避するよう推奨されている。

▼ locality の観点から、関連データはグループ化するのがよい
上記、ドキュメントモデルだけでなく、RDモデルでも同様。
Google の Spanner DBや、Oracle DBは、テーブルの行を親テーブルにネストすることができる。
Bigtable データモデル(Cassandra や HBase で使われている)にも同様の機能あり。
