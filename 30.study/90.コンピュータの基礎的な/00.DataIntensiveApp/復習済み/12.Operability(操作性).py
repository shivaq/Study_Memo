■■■■■■■■■■■■■■■■■■■■■■■■■■ Operability
・オペレーションチームがシステムを運用しやすくする
・良いオペレーションは、しばしば悪いソフトウェアの制約のワークアラウンドになる
・よいソフトウェアは悪いオペレーションでは reliable に回せない
・一部のオペレーションは自動化すべき。

■■■■■■■■■■■■■■■■■■■■■■■■■■ よいオペレーション
・システムのヘルスを監視して、悪い状態になったらすばやく復旧させる
・問題の原因を突き止める。システムの failure や パフォーマンスの劣化など
・ソフトウェアやプラットフォームを Up to date に保つ。セキュリティパッチなど。
・異なるシステム同士がどう影響し合うか、Keeping tabs する。そうすることで、問題のある変更を事前に避ける事ができる。
・キャパシティ計画などをして、将来の問題を予期し、起きる前に解決する。
・デプロイや設定管理のためのよいプラクティスやツールを確立する
・複雑なメンテナンスタスクを実行する。たとえばあるプラットフォームから別のそれにアプリを移行するなど
・設定変更時にも、システムのセキュリティを Maintain する
・商用環境を安定した状態にするために、予測されるオペレーションのプロセスを定義する
・属人化を避けるため、システムに対する組織の知識を確保しておく



よいoperabilityはルーチンタスクを用意にし、運用チームも高付加価値の活動に集中することができる。

・モニタリングによって、システムの内部や実行時の振る舞いを可視化する
・標準ツールで自動化と integration をサポートする
・個々のマシン間の依存を避ける。一部のマシンをメンテナンスしても、システム全体は動かし続けることができるように
・ドキュメントをしっかりする。わかりやすいオペレーションモデルを使う
If I do X, Y will happen.
・デフォルトの振る舞いを整備し、かつ、アドミンには必要に応じてデフォルトの振る舞いを上書きする自由を与える
・必要のうじて自己治癒ができるようにする。しかし、アドミンには必要に応じてシステムに対し手動コントロールができるようにする
・予測される振る舞いを示し、 surprise を最小化する
