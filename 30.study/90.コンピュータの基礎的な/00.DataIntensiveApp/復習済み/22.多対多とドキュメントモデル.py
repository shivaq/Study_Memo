▼ 多対多を表現する、ベストな方法はどういったものか？
RDB 世界で 多対多とJOINがルーティーンで使われる一方、
ドキュメントDBとNoSQL 世界では、多対多を表現する、ベストな方法はどういったものか、といった議論が再燃している。
この手の議論は、NoSQL の歴史よりもずっと古い。

アポロ計画位使われた IMS(情報管理システム)はツリー構造で、多対多の実現が難しく、JOINをサポートしていなかった。
開発者たちは、非正規化(重複)を行うか、手動であるレコードから別のレコードへの参照を解決するかの決断を迫られていた。
これは、こんにち開発者がドキュメントデータベースで直面している問題と非常によく似ている。

▼ はるか昔、多対多を解決するために提案されたソリューション
1.リレーショナルモデル。※ やがて世界を支配する
2.ネットワークモデル ※ 一時期興隆したが、やがて消え去った。

。。。そして、この問題は未だホットなイシューだ。

▼ ドキュメントDB の現在
ドキュメントDBはネストされたレコード(役職、教育、連絡先などのように、1対多のもの)を、親のレコードに格納する。
別のテーブルに格納するのではなく。

▼ 多対一、多対多については、RDBもドキュメントDBも根本は違いがない
・どちらも関連するアイテムはユニークなIDによって参照される
※ リレーショナルモデルにおける 外部キー、ドキュメントモデルにおける ドキュメントリファレンス
・IDが解決されるのは、JOINを使うときの読み込み時または、後に続くクエリーの時。
