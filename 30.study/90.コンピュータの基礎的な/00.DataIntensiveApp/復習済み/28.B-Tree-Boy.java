■■■■■■■■■■■■■■■■■■■■■■■■■■ B-Trees
・最も受け入れられているインデックス構造
・ほとんどすべてのRDBで標準インデックスとして実装されている。
・非リレーショナルDBでもたくさん採用されている。

・キーバリューペアがキーでソートされている。
 →キーバリュー探索と範囲クエリが効率的

▼ ログ構造インデックスとの違い
The log-structured indexes
 →DBを数MBくらいの可変サイズのセグメントに分割
 →セグメントへはシークエンシャルに書き込む

B-tree
 →固定サイズ(4 KBが多い)のブロックまたはページに、DBを分割
  →読み書きは一度に一ページ
-------------------------------------------------

・各ページはアドレスやロケーションで同定される
 →あるページが他のページを参照することができる(ポインタに似てるけど、メモリではなくディスクに対してのポインタ)
 →これらページの参照によって、ページのツリーを構築する



■■■■■■■■■■■■■■■■■■■■■■■■■■ write-ahead log (WAL, also known as a redo log)
・クラッシュに強くするための手法
・append only ファイル
・B-tree のあらゆる modification 時に書かれなければならない
 →ツリーのページに適用される前にかかれなければならない。


■■■■■■■■■■■■■■■■■■■■■■■■■■ B-tree VS LSM
B-tree は色んな所で使われてきて、最適化されているので、すぐに無くなることはないだろう

新しいデータストアでは、LS インデックスが広がり始めている
どっちがいいかは、試して比較して、をするしかない。
