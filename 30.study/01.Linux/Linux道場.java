▼ Linux カーソル移動
-------------------------------------------------

集中訓練
-------------------------------------------------
.tar アーカイブ作成
gzip 作成
アーカイブされているファイルの一覧表示
圧縮してアーカイブされているファイルの一覧表示
tar を untar
gzip を展開
特定のファイルのみ解凍して展開


-------------------------------------------------



▼ Vim
-------------------------------------------------
%	括弧へ移動

w	単語の先頭に進む
b	単語の先頭に戻る
e	単語の末尾に進む
ge	単語の末尾に戻る

W	単語の先頭に進む
B	単語の先頭に戻る
E	単語の末尾に進む
gE	単語の末尾に戻る

ctrl + u	半画面分 上へ
ctrl + d	半画面分 下へ
ctrl + b	一画面分 上へ
ctrl + f	一画面分 下へ
{	段落毎に上へ
}	段落毎に下へ


g;	変更してきた箇所に戻る
g,	変更してきた箇所に進む

コピー// y





削除
単語 dw 3dw←3単語削除

行頭まで d$

:set number  ⇒行番号を表示

■大文字での移動と、小文字での移動都の違い
abc.def.ghi
小文字なら5単語 abc . def . ghi
大文字なら1単語 abc.def.ghi




0	行の先頭へ(インデント無視して先頭へ)
^	行の先頭へ
$	行の末尾へ
+	下の行の先頭へ
-	上の行の先頭へ

コマンド	移動内容

gg	そのファイルの先頭へ
G	そのファイルの末尾へ

ジャンプリストを辿る

ファイル内も移動できるけど、ファイル間の移動に便利。
直前に編集していたファイルに戻りたいとか。
今回の記事にはそぐわないかな。。
コマンド	移動内容
ctrl + o	ジャンプしてきた箇所に戻る
ctrl + i	ジャンプしてきた箇所に進む




:w !sudo tee %// ReadOnly で開いて編集したときも、保存可能
tee// 一つの出力を、特定のファイルと、標準出力両方に送る。上記コマンドは、標準出力は指定されていないので、出力されない。
// 上書きのためのハック的なやり方。
%// 現在のファイル

現在の位置から、次の foo までを選択//    /vfoo
保存して閉じる//   ZZ


-------------------------------------------------






■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■ grep
-------------------------------------------------
-c  ⇒マッチした総行数の表示
-i  ⇒大文字小文字を区別しない
-n  ⇒行番号をつけて表示
-v  ⇒指定したパターンを含まない行だけを表示
-l  ⇒指定したパターンを含むファイル名だけを表示

■行頭が任意の文字列である
grep '^program' *txt

■複数の条件でor検索
grep -e 検索したい文字列1 -e 検索したい文字列2 検索したいテキストファイル

■検索にヒットした前後の行を出力する場合
# grep 検索したい文字列 -B 出力したい行数 検索したいテキストファイル
# grep 検索したい文字列 -A 出力したい行数 検索したいテキストファイル
# grep 検索したい文字列 -C 出力したい行数 検索したいテキストファイル


■フォルダ内のファイルを再帰的に指定
grep -r 検索したい文字列 検索したいファイルのあるディレクトリ

■独立した文字列をもつ行のみを出力させる(the のみ出力 them は出力しない）
grep -w 検索したい文字列 検索したいファイル

■zgrep
-------------------------------------------------









書き出し
cat generateLongText.sh | grep \#

一文字ずつ移動
一単語ずつ移動
行頭/行末移動
左右の文字を削除
カーソル右左単語削除
カーソル右左単語削除
カーソルポジション直前の単語をカット
前にいたディレクトリに移動
兄弟ディレクトリに移動

ファイルサイズでソート
ソートを逆転
作成時間でソート

ファイルの中身を新規ファイルに流し込む// コピーではない
ファイルの作成と書き込みを同時に行う
ls の内容を直接ファイルに書き込み
ファイルの中身をgrepして、別ファイルに流し込み
これをあそこへコピー
ファイル名の最後に文字列追加したコピー作成
ファイル名の一部のみ変更
複数のフォルダを一度に作る
複数のフォルダを一度に削除

curl でファイルのソースコードを表示
// curl google.com

URL を指定して その中身を名前をつけて保存
curl -o -L dictionary.txt  https://tinyurl.com/zeyq9vc

ファイルの中身をグレップ
// grep she dictionary.txt
指定した単語の数を表示

.tar アーカイブ作成
gzip 作成
アーカイブされているファイルの一覧表示
圧縮してアーカイブされているファイルの一覧表示
tar を untar
gzip を展開
特定のファイルのみ解凍して展開


ベーシック 体に覚えさえろ
-------------------------------------------------
一文字ずつ移動
// Ctrl + B/F
一単語ずつ移動
// Alt + B/F
行頭/行末移動
// Ctrl + a/essh ubuntu@172.31.34.154 -i ansibleWS.pem
カーソルポジション移動後、前のポジションに戻る
// Ctrl + XX

左右の文字を削除
// Ctrl + D/H
カーソル右左単語削除
// Alt d
// Ctrl + Alt + h
カーソルポジション直前の単語をカット
// Ctrl + W
カーソルポジションから 最後まで/先頭までのテキストをカット
// Ctr + u/k

ペースト
// Ctrl + Y

文字の大文字小文字化
// Alt + u/l

Ctrl 使って Enter と同じ効果
// Ctrl + j
// Ctrl + m

Ctrl 使って ヒストリ↕
// Ctrl + p
// Ctrl + n

前にいたディレクトリに移動
// cd -
兄弟ディレクトリに移動
// cd ../Play

ファイルサイズでソート
// ls -S
ソートを逆転
// ls -r
作成時間でソート
// ls -t
-------------------------------------------------

ファイルの中身を新規ファイルに流し込む// コピーではない
// cat dd.txt >> test.txt
ファイルの作成と書き出しを同時に
// cat > inventory.txt
// target1 ansible_host=192.168.100.9 ansible_ssh_pass=password
// ^C
ls の内容を直接ファイルに書き込み
// ls -l > somefile.txt
ファイルの中身をgrepして、別ファイルに流し込み
// cat somefile.txt | grep keyword > filefound.list
これをあそこへコピー
// cp dd.txt /home/yasuaki/test_2018020
ファイル名の最後に文字列追加したコピー作成
//  cp /etc/rc.conf{,-old}
ファイル名の一部のみ変更
// mv tes{t,tttttttttttttttt}.txt
複数のフォルダを一度に作る
// mkdir myfolder{1,2,3}

curl でファイルのソースコードを表示
// curl google.com

URL を指定して その中身を名前をつけて保存
// curl -o -L dictionary.txt  https://tinyurl.com/zeyq9vc
// このファイルを、このディレクトリから取得

ファイルの中身をグレップ
// grep she dictionary.txt

指定した単語の数を表示
// grep she dictionary.txt | wc -l

.tar アーカイブ作成
// mkdir arch
// touch arch/unk{1,2}
// tar -cvf tarファイル名 アーカイブ対象ディレクトリ
gzip 作成
// tar -czvf tgzファイル名 圧縮対象ディレクトリ
アーカイブされているファイルの一覧表示
// tar  -tf tarファイル名
圧縮してアーカイブされているファイルの一覧表示
// tar  -tzf tgzファイル名

tar を untar
// tar -xvf tarファイル名
gzip を展開
// tar  -xvzf tgzファイル名
特定のファイルのみ解凍して展開
// tar  -xvzf tgzファイル名 ファイルパス

コマンド履歴検索
Ctrl + r ⇒コマンドの一部を打つ
Ctrl + r を繰り返す ⇒更に検索してくれる
遡り過ぎたら Ctrl + c でリセット
これに Ctrl + a/e を組み合わせて、さらにコマンドを修正できる
-------------------------------------------------
 ログに使うコマンド
 // date, cal, w,

 ユーザー情報
 // uname -a
 ユーザーネーム表示
 // hostname
 IP アドレス表示
 // hostname -I
-------------------------------------------------

▼ apt 系
-------------------------------------------------
sudo apt-get some_packages// package をインストール
sudo apt-get update
sudo apt-get upgrade

apt-cache search jed// パッケージを探す
-------------------------------------------------
インストールされているファイルを確認
ubuntu 系
// dpkg -l
centos 系
// yum list installed
-------------------------------------------------






 調査系
 -------------------------------------------------
 // df -b,-k,-m/// 使用可能ディスクサイズ
 du// ファイル容量

 二つの単語を含むファイルをサーチ
 // locate -i *hello*this”
 -------------------------------------------------




 -------------------------------------------------
直前のラインを実行
// !!
直前の引数をコピー
// !$       cd !$ みたく使う

番号指定でヒストリコマンド実行
// !499

ファイルパスはドラッグ・アンド・ドロップで表示できる
//













▼ awk
-------------------------------------------------
///proc/cpuinfo の processor で始まる行の 3 つ目のColumn のうち、最後の1つを出力する。
///プロセッサ番号は 0 から始まるため、出力された数値 + 1 が CPU 数
cat /proc/cpuinfo | awk '/^processor/{print $3}' | tail -1
-------------------------------------------------

▼ sed
-------------------------------------------------
s は substitute の s
// echo Sunday | sed 's/day/night/'
//  →Sunnight
空文字に置換
// echo 192.168.56.2/24 | sed 's/\/.*$//'
-------------------------------------------------










ssh とかのコマンド文字列でテキストファイルを作成
単語移動前後 大文字 小文字の違いを知る

文章頭、末尾移動
// ctrl + h/l








~/.bashrc
-------------------------------------------------
ショートカットの登録方法
// bashrc ファイルに下記記載
// alias la='ls -A'
-------------------------------------------------
