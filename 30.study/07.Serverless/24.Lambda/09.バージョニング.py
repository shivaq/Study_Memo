■■■■■■■■■■■■■■■■■■■■■■■■■■ そもそも、Lambda の更新はどう管理するのが理想的か。
▼ 新規構築と更新とは分ける
・ベースリソースは CFN で定義
※ Log や パラメータなど。
・初期はS3 に入れたスクリプトを参照する形で構築
・初期Lambda にはエイリアスをつけておく Initial とか Original とか 1stVerision とか

▼ 更新時
・スクリプトのバージョニングは"Git" で行う。S3 のスクリプトは初回時のみ。それか、CFN は 「hello world 直書き」で作っておいて、S3は使わない。
・エイリアス、バージョニングはCFNを使わない。コンソールのみで行う。
※ そのスクリプトとバージョンとのヒモ付が、CFNだと直感的に分かりづらい。
・Lambda のバージョニングはもとに戻ることは想定せず、バージョン番号が increment されていくばかり。
・エイリアス対象を更新したいときは、$LATEST のコードをGitのコードで書き換えて、環境変数を好きに変えて、バージョニング →エイリアスのポインタ紐づけ

▼ 変更を行うたびにバージョニングを。
複数開発しているときなど、上書きしないように。

▼ 同一スクリプト、別環境変数でバージョニングしている時
スクリプトを更新したら、再度各環境変数別のバージョンを作成し、エイリアスを再割り当てする必要あり。

▼ エイリアスとリリース番号
リリースごとに新エイリアス名を作る。
アプリ側は、アプリのバージョンが示すLambdaエイリアスを参照し続ける。
バージョンの古いアプリは旧エイリアスを参照し続け、
最新バージョンのアプリは、最新バージョンのLambdaを参照する。

こうすることで、フロントエンドは開発段階 →リリース段階の際に、DEV →PROD と参照先をスイッチする必要はない。ミスも混入しない。
DEVは不要となる。

-------------------------------------------------

▼ エイリアスを使ってロールバック
問題が出た場合は、PROD エイリアスがバージョン 1 を指すように再マッピングすることで、簡単に本稼働バージョンをロールバック
-------------------------------------------------
AutoBackupVer1:
  Type: AWS::Lambda::Version
  Properties:
    FunctionName: !Ref "MyFunction"
    Description: "Something fixed"
AliasForMyApp:
  Type: AWS::Lambda::Alias
  Properties:
    FunctionName: ！Ref "MyFunction"
    FunctionVersion: !GetAtt AutoBackupVer1.Version
    Name: "NameOfThisAlias"
-------------------------------------------------





■■■■■■■■■■■■■■■■■■■■■■■■■■ バージョニングとエイリアス

▼ バージョン
・git commit のようなもの。プロジェクトのヒストリーのスナップショット。
・バージョンは、環境変数、メモリーサイズ、タイミアウトなどを保持する
・バージョンは immutable. よって、一度作ると更新できず、バージョンが上がっていくのみ。ß
・現在バージョンは $LATEST


▼ エイリアス
-------------------------------------------------
▼ Lambda エイリアスとは
・Lambda 関数の特定のバージョンに対するポインタのようなもの
 必要に応じた Lambda 関数の新しいバージョンへの移行またはロールバックが容易

▼ 例) PROD エイリアス
1.バージョン 1 を指す PROD という名前のエイリアスを作成
 →PROD エイリアスを使用して Lambda 関数のバージョン 1 を呼び出すこと可能

2.PROD エイリアスをバージョン 2 を指すように再マッピング
 →バージョン 2 を本稼働環境に移行できます。









▼ バージョンの表示のされ方
-------------------------------------------------
修飾 ARN
// バージョンのサフィックスが付いた関数 ARN
arn:aws:lambda:aws-region:acct-id:function:helloworld:$LATEST

非修飾 ARN
// バージョンのサフィックスが付いていない関数 ARN
arn:aws:lambda:aws-region:acct-id:function:helloworld

バージョン発行しない限り、$LATEST バージョン が唯一のLambda関数バージョン
-------------------------------------------------
