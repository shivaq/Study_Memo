
▼ そもそも
-------------------------------------------------
現環境がどのような意図で設計されているか把握しておく。
・「なぜ、どうして、その設計/設定なのか」が記載されていることを重要視
・誰がみてもひと目で分かるものを作る

丁寧な書き方例
・リモートからの root ユーザでの直接ログインは、監視サーバからのみrootアクセスを許可する設計とする。

基本設計書
 →設計方針を伝えるためのドキュメント
詳細設計書
 →基本設計を実設定に落としたドキュメント
 →設計した意図、経緯を記載

パラメータシート
 →設定値を記載するのはパラメータシートのみとする。
 →ドキュメント修正時に修正箇所を増やさないため。
 →備考欄に ○○のため当設定値とする、とあると親切。
-------------------------------------------------





▼ バックアップ設計のための基礎知識
-------------------------------------------------
所属する組織の
データ保護規定、監査対応指針、事業継続方針、その他諸々の運用規定を確認

事業リスクを分析
// ソフトウェアの不具合
// ハードウェアの障害
// オペレーション上の人的ミス
// 脆弱性を突いた攻撃
// 悪意ある内部者の犯行
// 災害

事業のサービス・レベルを定義
// 当該事業にどの程度のサービス・レベルが要求されているのかを明らかにします。
// どのような事態が発生した場合、どれくらいの時間内に、どの時点のデータを復元し、
// どのレベルまで運営が復旧されていればよいか？
// また、バックアップのために供用可能な時間枠はどの程度か？

どのような事態: 確立された用語はなさそうなので、敢えて言うなら「履行の条件」
// ネットワークが正常に稼働しており、
// かつ、バックアップ用のストレージが正常に稼働しており、
// かつ、アサイン可能な運用担当者が存在する
どれくらいの時間内: RTO (Recovery Time Objective)
どの時点のデータ: RPO (Recovery Point Objective)
どのレベルまで: RLO (Recovery Level Objective)
供用可能な時間枠: メンテナンス・ウィンドウ

▼ バックアップを取る目的
システム障害からの復旧
ユーザの誤操作によるデータ消失からの復旧

■ バックアップの手段
1. ファイルデータバックアップ
フォルダ、ファイル単位でバックアップ
// 単純に他のドライブへコピーするだけでもバックアップとなりますが、
// (NTFSやext4、XFS等のファイルシステムの)アクセス権やSELinuxのコンテキストが
// 変わってしまう可能性があるため、注意が必要

3. スナップショット
あるタイミングでのファイルシステム上のフォルダ配下、
もしくはボリューム全体のビットの状態を
時間軸で切り抜いて保存しておく機能

▼ バックアップ/リストア/リカバリ方式
// バックアップ実行頻度
// 保持方式 (フル/差分/増分)
// バックアップ・コマンド
// 保持リビジョン数
// リストア・コマンド
// リカバリ手順

▼ 運用担当者への展開
バックアップ環境の扱い方やリカバリ手順のインプット、リハーサルなど

・定期的に確認したいこと
// 手順書の見直し
// バックアップ・ジョブのエラー率のチェック＆改善
// バックアップ・データの正常性チェック、そしてたまには避難訓練 (実地リカバリ演習)

-------------------------------------------------
